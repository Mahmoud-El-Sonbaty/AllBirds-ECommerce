@model List<GetPCSDTO>
@{
    ViewData["Title"] = "GetAllPrdColorSizes";
    int currentPage = ViewBag.CurrentPage ?? 1;
    int pageSize = ViewBag.PageSize ?? 10;
    int totalItems = ViewBag.TotalItems ?? 0;
    int totalPages = (int)Math.Ceiling((double)totalItems / pageSize);
}

@* <h1>GetAllPrdColorSizes</h1> *@


@section Navbar {

    <partial name="_NavbarPartial" />
}
@section Sidebar {

    <partial name="_SidebarPartial" />
}
@section Footer {

    <partial name="_FooterPartial" />
}

@* <h1>AllCategory</h1> *@
@* @if (TempData["IsSuccess"] is bool Success)
{
    @if (Success)
    {
        <div class="alert alert-success text-dark" role="alert">
            <span>@TempData["Msg"]</span> <button onclick="closeMsg(event)" class="btn btn-outline-danger"><i class="mdi mdi-close"></i></button>
        </div>
    }
    else
    {
        <div class="alert alert-danger text-dark" role="alert">
            <span>@TempData["Msg"]</span> <button onclick="closeMsg(event)" class="btn btn-outline-danger"><i class="mdi mdi-close"></i></button>
        </div>
    }
} *@
<div id="msgDiv" style="display: none;" class="alert alert-warning text-dark" role="alert"> <span></span> <button onclick="closeMsg(event)" class="btn btn-outline-danger"><i class="mdi mdi-close"></i></button></div>
<div class="row ">
    <div class="col-12 grid-margin">
        <div class="card">
            <div class="card-body">
                <h3 class="card-title">All Product Color Sizes</h3>
                <p class="card-description">
                    <button id="newBtn" class="btn btn-primary" onclick='addNewRow()'><i class="fas fa-plus"></i> New</button>
                    @* <a class="btn btn-primary" asp-controller="Product" asp-action="CreateProductColorSize" asp-route-prdColorId="@ViewBag.PrdColorId"><i class="fas fa-plus"></i> New</a> *@
                </p>
                <div class="table-responsive">
                    <table class="table table-striped">
                        @*  table-hover *@
                        <thead>
                            <tr>
                                <th> Size Number </th>
                                <th> Units In Stock </th>
                                <th> Actions </th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Count < 1)
                            {
                                <tr>
                                    <td colspan="3">No Sizes Available</td>
                                </tr>
                            }
                            else
                            {
                                @foreach (GetPCSDTO pcs in Model)
                                {
                                    <tr class="text-white">
                                        <td> @pcs.SizeNumber </td>
                                        <td> @pcs.UnitsInStock </td>
                                        <td>
                                            @* <a type="button" asp-action="CategiryDetils" asp-controller="Category" asp-route-id="@cat.Id" class="btn btn-outline-primary"><i class="fas fa-eye"></i></a> *@
                                            <button type="button" class="btn btn-outline-secondary" onclick="openPrdSpecToEdit(event)"><i class="fas fa-edit"></i></button>
                                            @* <a asp-action="UpdateProductColorSize" asp-controller="Product" asp-route-prdColorSizeId="@pcs.ProductColorSizeId" class="btn btn-outline-secondary"><i class="fas fa-edit"></i></a> *@
                                            @* <a asp-action="DeleteProductColorSize" asp-controller="Product" asp-route-prdColorSizeId="@pcs.ProductColorSizeId" asp-route-prdColorId="@ViewBag.PrdColorId" class="btn btn-outline-danger"><i class="fas fa-trash-alt"></i></a> *@
                                            <button type="button" class="btn btn-outline-danger" pcsId="@pcs.ProductColorSizeId" onclick="openModal('Product Color Size', '/Product/DeleteProductColorSize?prdColorSizeId=@pcs.ProductColorSizeId&prdColorId=@ViewBag.PrdColorId')"><i class="fas fa-trash-alt"></i></button>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <!-- Pagination -->
            <nav>
                <ul class="pagination d-flex justify-content-center rounded-separated pagination-primary">
                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                        <a class="page-link" asp-action="GetAllProductColorSizes" asp-route-prdColorId="@ViewBag.PrdColorId" asp-route-pageNumber="@(currentPage - 1)" asp-route-pageSize="@pageSize"><i class="mdi mdi-chevron-left"></i></a>
                    </li>
                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            @if (i == currentPage)
                            {
                                <a class="page-link">@i</a>
                            }
                            else
                            {
                                <a class="page-link" asp-action="GetAllProductColorSizes" asp-route-prdColorId="@ViewBag.PrdColorId" asp-route-pageNumber="@i" asp-route-pageSize="@pageSize">@i</a>
                            }
                        </li>
                    }
                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                        <a class="page-link" asp-action="GetAllProductColorSizes" asp-route-prdColorId="@ViewBag.PrdColorId" asp-route-pageNumber="@(currentPage + 1)" asp-route-pageSize="@pageSize"><i class="mdi mdi-chevron-right"></i></a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>
@section Scripts {
    @if (TempData["IsSuccess"] is bool Success)
    {
        @if (Success)
        {
            <script>
                showMsgSuccessToast(@Html.Raw(Json.Serialize(TempData["Msg"])));
            </script>
        }
        else
        {
            <script>
                showMsgDangerToast(@Html.Raw(Json.Serialize(TempData["Msg"])));
            </script>
        }
    }
    <script>
        let tBody = document.getElementsByTagName("tbody");
        console.log(tBody);
        const sizes = @Html.Raw(Json.Serialize(ViewBag.Sizes ?? new List<dynamic>()));
        const prdColorId = @Html.Raw(Json.Serialize(ViewBag.PrdColorId));
        function addNewRow() {
            newBtn.setAttribute("disabled", true);
            newBtn.setAttribute("class", "btn btn-secondary");
            let sizesOptions = "";
            if (sizes && sizes.length > 0) {
                for (const size of sizes) {
                    sizesOptions += `<option value="${size.id}">${size.sizeNumber}</option>`;
                }
            }
            console.log(sizes)
            // Append the new row
            tBody[0].insertAdjacentHTML('beforeend', `
                <tr>
                    <td>
                        <select class="js-example-basic-single" style="width: 100%" >
                            ${sizesOptions}
                        </select>
                    </td>
                    <td>
                        <input class="form-control" type="number" min=0  placeholder="Units In Stock" />
                    </td>
                    <td>
                        <button type="button" onclick="savePrdSpec(event)" class="btn btn-outline-success"><i class="fas fa-check"></i></button>
                        <button type="button" onclick="removeRow(event)" class="btn btn-outline-danger"><i class="fas fa-cancel"></i></button>
                    </td>
                </tr>
            `);
        }
        function removeRow(evt) {
            newBtn.setAttribute("class", "btn btn-primary");
            newBtn.removeAttribute("disabled");
            // console.log(evt);
            // console.log(evt.target);
            // console.log(evt.target.parentElement);
            // console.log(evt.target.parentElement.parentElement);
            // console.log(evt.target.parentElement.parentElement.parentElement);
            evt.target.children.length ? evt.target.parentElement.parentElement.remove() : evt.target.parentElement.parentElement.parentElement.remove();
        }
        function savePrdSpec(evt) {
            newBtn.setAttribute("class", "btn btn-primary");
            newBtn.removeAttribute("disabled");
            let lastTd = evt.target.children.length ? evt.target.parentElement : evt.target.parentElement.parentElement;
            let sizeSelectTd = lastTd.previousElementSibling.previousElementSibling;
            let choosenSizeId = sizeSelectTd.children[0].value;
            let UnitsInStockTd = lastTd.previousElementSibling;
            console.log(prdColorId, choosenSizeId, UnitsInStockTd.children[0].value);
            // send request and take the prd spec id created in the database to put it in the href
            $.ajax({
                url: `/Product/CreateProductColorSize`,
                type: 'POST',
                dataType: 'json',
                contentType: 'application/json', 
                data: JSON.stringify({
                    "ProductColorId": prdColorId,
                    "SizeId": Number(choosenSizeId),
                    "UnitsInStock": UnitsInStockTd.children[0].value == "" ? 0 : Number(UnitsInStockTd.children[0].value),
                    // "ContentAr": contentTd.children[1].value
                }),
                success: function (res) {
                    console.log(res);
                    // $("#Data").html(res);
                    if (res.success) {
                        UnitsInStockTd.innerHTML = UnitsInStockTd.children[0].value == "" ? 0 : Number(UnitsInStockTd.children[0].value);
                        sizeSelectTd.textContent = sizeSelectTd.children[0].selectedOptions[0].textContent;
                        lastTd.innerHTML = `<button type="button" class="btn btn-outline-secondary" onclick="openPrdSpecToEdit(event)"><i class="fas fa-edit"></i></button>
                                    <a href="/Product/DeleteProductColorSize?prdColorSizeId=${res.id}&prdColorId=${prdColorId}" class="btn btn-outline-danger"><i class="fas fa-trash-alt"></i></a>`;
                        // msgDiv.setAttribute("class", "alert alert-success text-dark");
                        // msgDiv.style = "display: block;";
                        // msgDiv.children[0].textContent = res.message;
                        showMsgSuccessToast(res.message);
                        setTimeout(function () {
                            window.location.reload();
                        }, 1500);
                    }
                    else {
                        showMsgDangerToast(res.message);
                        // msgDiv.setAttribute("class", "alert alert-danger text-dark");
                        // msgDiv.style = "display: block;";
                        // msgDiv.children[0].textContent = res.message;
                        // alert(res.message);
                    }
                }
            });
        }
        let oldUnitsInStock = "";
        let oldSizeNumber = "";
        let latestPrdColorSizeIdClicked = 0;
        let isOpenSomewhere = false;
        function openPrdSpecToEdit(evt) {
            if (isOpenSomewhere) {
                return;
            }
            isOpenSomewhere = true;
            let lastTd = evt.target.children.length ? evt.target.parentElement : evt.target.parentElement.parentElement;
            let prdSpecId = lastTd.children[1].getAttribute("pcsId");
            // let prdSpecId = lastTd.children[1].href.split("/").reverse()[0].split("=")[1].split("&")[0];
            console.log(prdSpecId);
            latestPrdColorSizeIdClicked = prdSpecId;
            lastTd.innerHTML = `<button type="button" onclick="saveEdit(event)" class="btn btn-outline-success"><i class="fas fa-check"></i></button>
                                        <button type="button" onclick="cancelEdit(event)" class="btn btn-outline-danger"><i class="fas fa-cancel"></i></button>`;
            let UnitsInStockTd = lastTd.previousElementSibling;
            let sizeTd = lastTd.previousElementSibling.previousElementSibling;
            oldUnitsInStock = UnitsInStockTd.textContent;
            oldSizeNumber = sizeTd.textContent;
            console.log(sizeTd.textContent);
            UnitsInStockTd.innerHTML = `<input class="form-control" type="number" min=0 value="${Number(UnitsInStockTd.textContent)}" />`;
            let sizesOptions = "";
            if (sizes && sizes.length > 0) {
                for (const size of sizes) {
                    console.log(size.sizeNumber, sizeTd.textContent, Number(size.sizeNumber) == sizeTd.textContent, `${size.sizeNumber}` == `${ sizeTd.textContent }`);
                    // if (size.sizeNumber == `${sizeTd.textContent}`)
                    if (Number(size.sizeNumber) == sizeTd.textContent)
                        sizesOptions += `<option selected value="${size.id}">${size.sizeNumber}</option>`;
                    sizesOptions += `<option value="${size.id}">${size.sizeNumber}</option>`;
                }
            }
            sizeTd.innerHTML = `<select class="js-example-basic-single" style="width: 100%" >${sizesOptions}</select>`;
        }
        function cancelEdit(evt) {
            isOpenSomewhere = false;
            let lastTd = evt.target.children.length ? evt.target.parentElement : evt.target.parentElement.parentElement;
            let unitsInStockTd = lastTd.previousElementSibling;
            let sizeTd = lastTd.previousElementSibling.previousElementSibling;
            unitsInStockTd.textContent = oldUnitsInStock;
            sizeTd.textContent = oldSizeNumber;
            lastTd.innerHTML = `
                        <button type="button" class="btn btn-outline-secondary" onclick="openPrdSpecToEdit(event)"><i class="fas fa-edit"></i></button>
                        <a href="/Product/DeleteProductColorSize?prdColorSizeId=${latestPrdColorSizeIdClicked}&prdColorId=${prdColorId}" class="btn btn-outline-danger"><i class="fas fa-trash-alt"></i></a>`;
        }
        function saveEdit(evt) {
            let lastTd = evt.target.children.length ? evt.target.parentElement : evt.target.parentElement.parentElement;

            let unitsInStockTd = lastTd.previousElementSibling;
            let sizeTd = lastTd.previousElementSibling.previousElementSibling;
            let choosenSizeId = sizeTd.children[0].value;
            // contentTd.innerHTML = contentTd.children[0].value;
            // specTd.textContent = specTd.children[0].selectedOptions[0].textContent;
            // send request and take the prd spec id created in the database to put it in the route
            $.ajax({
                url: `/Product/UpdateProductColorSize`,
                type: 'POST',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify({
                    "Id": latestPrdColorSizeIdClicked,
                    "ProductColorId": prdColorId,
                    "SizeId": choosenSizeId,
                    "UnitsInStock": unitsInStockTd.children[0].value,
                    // "ContentAr": contentTd.children[1].value
                }),
                success: function (res) {
                    console.log(res);
                    if (res.success) {
                        unitsInStockTd.innerHTML = unitsInStockTd.children[0].value == "" ? 0 : Number(unitsInStockTd.children[0].value);
                        sizeTd.textContent = sizeTd.children[0].selectedOptions[0].textContent;
                        lastTd.innerHTML = `<button type="button" class="btn btn-outline-secondary" onclick="openPrdSpecToEdit(event)"><i class="fas fa-edit"></i></button>
                                    <a href="/Product/DeleteProductColorSize?prdColorSizeId=${latestPrdColorSizeIdClicked}&prdColorId=${prdColorId}" class="btn btn-outline-danger"><i class="fas fa-trash-alt"></i></a>`;
                        // msgDiv.style = "display: block;";
                        // msgDiv.setAttribute("class", "alert alert-success text-dark");
                        // msgDiv.children[0].textContent = res.message;
                        showMsgSuccessToast(res.message);
                        isOpenSomewhere = false;
                    }
                    else {
                        // msgDiv.style = "display: block;";
                        // msgDiv.setAttribute("class", "alert alert-danger text-dark");
                        // msgDiv.children[0].textContent = res.message;
                        showMsgDangerToast(res.message);
                        // alert(res.message);
                    }
                }
            });
        }
    </script>
}